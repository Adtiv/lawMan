{"version":3,"file":"clients.service.js","sourceRoot":"","sources":["file:///C:/Users/datoc/OneDrive/Documents/GitHub/lawManWeb/tmp/broccoli_type_script_compiler-input_base_path-2Or9DHZ9.tmp/0/src/app/clients/clients.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, OnInit} from '@angular/core';\nimport {AngularFire, FirebaseListObservable, FirebaseObjectObservable} from 'angularfire2';\nimport {UserService} from '../user/user.service';\nimport {FirebaseAuth} from 'angularfire2';\nimport * as moment from 'moment';\nlet now = moment().format('LLLL');\n\n@Injectable()\nexport class ClientService implements OnInit{\n    clients: FirebaseListObservable<any[]>;\n    client: FirebaseObjectObservable<any[]>;\n    af: AngularFire;\n    clientKey;\n    userService: UserService;\n    userId;\n    clientList: Client[];\n    constructor(af: AngularFire,userService: UserService){\n      this.af=af;\n      this.userService=userService;\n      this.clientList=[];\n      this.userService.af.auth.subscribe((auth)=>{\n        if(auth!=null){\n            this.userId=this.userService.uid;\n            this.setClients();\n          }\n        else{\n          this.clients=null;\n        }\n      });\n    }\n    ngOnInit(){}\n    setClients(){\n      this.clients = this.af.database.list('clients/'+this.userId, { preserveSnapshot: true });\n      this.clientList = [];\n      this.af.database.list('clients/'+this.userId,{\n            query: {\n              orderByChild: 'name',\n            }\n          }).subscribe(snapshots => {\n              snapshots.forEach(snapshot => {\n               this.setLocalClients(snapshot.$key,snapshot.name,snapshot.email,snapshot.phoneNumber,snapshot.address);\n        })  \n      })\n    }\n    setLocalClients(key,name,email,phoneNumber,address){\n      this.clientList.push(new Client(key,name,email,phoneNumber,address));\n    }\n    getClients(){\n      if(this.userId!=null){\n        this.clients = this.af.database.list('clients/'+this.userId,{\n            query: {\n              orderByChild: 'name',\n            }\n          });\n        return this.clients;\n      }\n    }\n    getLocalClientList(){\n      return this.clientList;\n    }\n    addClient(name, email,phoneNumber,address){\n      console.log(name+\"   \"+email+\" \"+phoneNumber+\" \" +address);\n      this.clients=this.af.database.list('clients/'+this.userService.uid);\n      this.clientKey = this.clients.push({uid:this.userService.uid,name:name,email:email,phoneNumber:phoneNumber,address:address}).key;\n      this.addSortLocalClientArray(new Client(this.clientKey,name,email,phoneNumber,address));\n    }\n    addSortLocalClientArray(client){\n      this.clientList.push(client);\n      this.clientList.sort(function(a,b){\n        var alc = a.name.toLowerCase(), blc = b.name.toLowerCase();\n        return alc > blc ? 1 : alc < blc ? -1 : a.name > b.name ? 1 : a.name < b.name ? -1 : 0;\n      });\n    }\n    updateSortLocalClient(key,name,email,phoneNumber,address){\n      for(let i=0;i<this.clientList.length;i++){\n        if(this.clientList[i].key==key){\n          this.clientList[i].name=name;\n          this.clientList[i].email=email;\n          this.clientList[i].phoneNumber=phoneNumber;\n          this.clientList[i].address=address;\n        }\n      }\n      this.clientList.sort(function(a,b){\n        var alc = a.name.toLowerCase(), blc = b.name.toLowerCase();\n        return alc > blc ? 1 : alc < blc ? -1 : a.name > b.name ? 1 : a.name < b.name ? -1 : 0;\n      });\n    }\n    deleteLocalClient(clientKey){\n      for(let i=0;i<this.clientList.length;i++){\n        if(this.clientList[i].key==clientKey){\n          this.clientList.splice(i,1);\n        }\n      }\n    }\n    updateClient(clientKey,name,email,phoneNumber,address){\n      this.client=this.af.database.object('clients/'+this.userService.uid+'/'+clientKey);\n      this.client.update({name:name,email:email,phoneNumber:phoneNumber,address:address});\n      this.af.database.list('clientTasks/'+clientKey).subscribe(snapshots => {\n          snapshots.forEach(snapshot => {\n            this.af.database.object('taskClients/'+snapshot.$key+'/'+clientKey).update({client:name});\n          })\n      })\n      this.updateSortLocalClient(clientKey,name,email,phoneNumber,address);\n      //console.log(taskKey + title + description + dueDate + taskType + daysTillDue);\n    }\n    deleteClient(clientKey){\n      this.clients=this.af.database.list('clients/'+this.userService.uid);\n      this.clients.remove(clientKey);\n      this.af.database.list('clientTasks/'+clientKey).subscribe(snapshots => {\n        snapshots.forEach(snapshot => {\n          this.af.database.object('taskClients/'+snapshot.$key+'/'+clientKey).remove();\n        }); \n      })\n      this.af.database.list('clientTasks/'+clientKey).remove(); \n      this.deleteLocalClient(clientKey);\n    }\n}\nexport class Client{\n  key;\n  name;\n  email;\n  phoneNumber;\n  address;\n  constructor(key,\n              name,\n              email,\n              phoneNumber,\n              address){\n    this.key=key;\n    this.name=name;\n    this.email=email;\n    this.phoneNumber=phoneNumber;\n    this.address=address;\n  }\n}"]}