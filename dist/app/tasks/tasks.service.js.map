{"version":3,"file":"tasks.service.js","sourceRoot":"","sources":["file:///C:/Users/datoc/OneDrive/Documents/GitHub/lawManWeb/tmp/broccoli_type_script_compiler-input_base_path-2Or9DHZ9.tmp/0/src/app/tasks/tasks.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, OnInit} from '@angular/core';\nimport {AngularFire, FirebaseListObservable, FirebaseObjectObservable} from 'angularfire2';\nimport {UserService} from '../user/user.service';\nimport {ClientService} from '../clients/clients.service';\nimport {FirebaseAuth} from 'angularfire2';\nimport * as moment from 'moment';\nlet now = moment().format('LLLL');\n\n@Injectable()\nexport class TasksService implements OnInit{\n    task: FirebaseObjectObservable<any[]>;\n    tasks: FirebaseListObservable<any[]>;\n    filteredTask: FirebaseObjectObservable<any[]>;\n    filteredTasks: FirebaseListObservable<any[]>;\n    af: AngularFire;\n    taskKey;\n    userService: UserService;\n    userId;\n    startAtVal;\n    endAtVal;\n    taskFilter;\n    clients;\n    clientService:ClientService;\n    clientKey;\n    clientName;\n    constructor(af: AngularFire,userService: UserService,clientService:ClientService){\n      this.af=af;\n      this.userService=userService;\n      this.clientService=clientService;\n      this.userService.af.auth.subscribe((auth)=>{\n        if(auth!=null){\n            this.userId=this.userService.uid;\n            this.setTasks();\n            this.setClients();\n          }\n        else{\n          this.tasks=null;\n          this.clients=null;\n        }\n      });\n      setInterval(() => { this.taskDateCountdown() }, 60000*1);    \n    }\n    ngOnInit(){\n      this.startAtVal=0;\n      this.endAtVal=1000;\n      this.taskFilter=\"none\";\n    }\n    setClients(){\n      this.clients=this.clientService.getClients();\n    }\n    setTasks(){\n      this.tasks = this.af.database.list('tasks/'+this.userId, { preserveSnapshot: true });\n      this.af.database.list('tasks/'+this.userId).subscribe(snapshots => {\n        snapshots.forEach(snapshot => {\n          this.calculateNewDaysTillDue(snapshot);\n        });  \n      })\n    }\n    taskDateCountdown(){\n      this.af.database.list('tasks/'+this.userId).subscribe(snapshots => {\n        snapshots.forEach(snapshot => {\n          this.calculateNewDaysTillDue(snapshot);\n        });  \n      })      \n    }\n    calculateNewDaysTillDue(task){\n      var curr = new Date();\n      var currentDate=moment(curr).startOf('day');\n      var due = this.parseDateISO(task.dueDate);\n      var futureDate =moment(due).startOf('day');\n      var differenceInDays = futureDate.diff(currentDate, 'days');\n      this.task=this.af.database.object('tasks/'+this.userId+'/'+task.$key);\n      this.task.update({daysTillDue:differenceInDays});\n      this.filteredTask=this.af.database.object('tasks/'+task.taskType+'/'+this.userId+'/'+task.$key);\n      this.filteredTask.update({daysTillDue:differenceInDays});\n    }\n    parseDateISO(date){\n      var parsedDate=\"\";\n      parsedDate=date.substring(6,10)+\"-\"+date.substring(0,2)+\"-\"+date.substring(3,5);\n      return parsedDate;\n    }\n    getTasks(filter){\n      console.log(this.userId);\n      this.startAtVal;\n      this.endAtVal;\n      this.taskFilter=filter;\n      if(this.userId!=null){\n        if(this.taskFilter=='none'){\n          this.tasks = this.af.database.list('tasks/'+this.userId,{\n            query: {\n              orderByChild: 'daysTillDue',\n              startAt:this.startAtVal,\n              endAt:this.endAtVal\n            }\n          });\n          return this.tasks;\n        }\n        else if(this.taskFilter=='discovery'){\n          this.filteredTasks = this.af.database.list('tasks/Discovery Response/'+this.userId,{\n            query: {\n              orderByChild: 'daysTillDue',\n              startAt:this.startAtVal,\n              endAt:this.endAtVal\n            }\n          });\n          return this.filteredTasks;\n        }\n        else if(this.taskFilter=='motion'){\n          this.filteredTasks = this.af.database.list('tasks/Motion Response/'+this.userId,{\n            query: {\n              orderByChild: 'daysTillDue',\n              startAt:this.startAtVal,\n              endAt:this.endAtVal\n            }\n          });\n          return this.filteredTasks;\n        }\n        else if(this.taskFilter=='mediation'){\n          this.filteredTasks = this.af.database.list('tasks/Mediation Statement/'+this.userId,{\n            query: {\n              orderByChild: 'daysTillDue',\n              startAt:this.startAtVal,\n              endAt:this.endAtVal\n            }\n          });\n          return this.filteredTasks;\n        }\n        else if(this.taskFilter=='pleading'){\n          this.filteredTasks = this.af.database.list('tasks/Pleading Response/'+this.userId,{\n            query: {\n              orderByChild: 'daysTillDue',\n              startAt:this.startAtVal,\n              endAt:this.endAtVal\n            }\n          });\n          return this.filteredTasks;\n        }\n        else if(this.taskFilter=='other'){\n          this.filteredTasks = this.af.database.list('tasks/Other/'+this.userId,{\n            query: {\n              orderByChild: 'daysTillDue',\n              startAt:this.startAtVal,\n              endAt:this.endAtVal\n            }\n          });\n          return this.filteredTasks;\n        }\n      }\n    }\n    filterByColor(color){\n      console.log(color);\n      if(color==\"none\"){\n        this.startAtVal=0;\n        this.endAtVal=1000;\n      }\n      else if(color==\"green\"){\n        this.startAtVal=6;\n        this.endAtVal=1000;\n      }\n      else if(color==\"yellow\"){\n        this.startAtVal=3;\n        this.endAtVal=5;\n      }\n      else{\n        this.startAtVal=0;\n        this.endAtVal=2;\n      }\n    }\n    addTask(title, description, dueDate,taskType,daysTillDue,client){\n      console.log(title+\"   \"+description+\" \"+dueDate+\" \" + taskType);\n      this.tasks=this.af.database.list('tasks/'+this.userService.uid);\n      this.taskKey = this.tasks.push({uid:this.userService.uid,title:title,description:description,dueDate:dueDate,taskType:taskType,daysTillDue:daysTillDue}).key;\n      this.filteredTask=this.af.database.object('tasks/'+taskType+'/'+this.userService.uid+'/'+this.taskKey);\n      this.filteredTask.set({uid:this.userService.uid,title:title,description:description,dueDate:dueDate,taskType:taskType,daysTillDue:daysTillDue});\n      this.parseClient(client);\n      this.addClientTask(this.clientKey,this.clientName,this.taskKey,title,daysTillDue);\n      //this.userService.addUserTask(this.taskKey);\n    }\n    parseClient(client){\n      for(var i=0;i<client.length;i++){\n        if(client.charAt(i)=='/' && client.charAt(i+1)=='/'){\n          this.clientName=client.substring(0,i);\n          this.clientKey=client.substring(i+2,client.length);\n        }\n      }\n    }\n    addClientTask(clientKey,clientName,taskKey,title,daysTillDue){\n      this.af.database.object('clientTasks/'+clientKey+'/'+taskKey).set({task:title,days:daysTillDue});\n      this.af.database.object('taskClients/'+taskKey+'/'+clientKey).set({client:clientName});\n    }\n    updateTask(taskKey,title,description,dueDate,taskType,daysTillDue,oldType){\n      this.task=this.af.database.object('tasks/'+this.userService.uid+'/'+taskKey);\n      this.task.update({uid:this.userService.uid,title:title,description:description,dueDate:dueDate,taskType:taskType,daysTillDue:daysTillDue});\n      if(oldType!=taskType){\n        this.filteredTask=this.af.database.object('tasks/'+oldType+'/'+this.userService.uid+'/'+taskKey);\n        this.filteredTask.remove();\n      }\n      this.filteredTask=this.af.database.object('tasks/'+taskType+'/'+this.userService.uid+'/'+taskKey);        \n      this.filteredTask.update({uid:this.userService.uid,title:title,description:description,dueDate:dueDate,taskType:taskType,daysTillDue:daysTillDue});\n      //console.log(taskKey + title + description + dueDate + taskType + daysTillDue);\n    }\n    deleteTask(taskKey,taskType){\n      this.tasks=this.af.database.list('tasks/'+this.userService.uid);\n      this.filteredTasks = this.af.database.list('tasks/'+taskType+'/'+this.userService.uid);\n      this.filteredTasks.remove(taskKey);\n      this.tasks.remove(taskKey);\n      this.af.database.list('taskClients/'+taskKey).subscribe(snapshots => {\n        snapshots.forEach(snapshot => {\n          this.af.database.object('clientTasks/'+snapshot.$key+'/'+taskKey).remove();\n        }); \n      })\n      this.af.database.list('taskClients/'+taskKey).remove();  \n    }\n}"]}