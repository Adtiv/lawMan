{"version":3,"file":"user.service.js","sourceRoot":"","sources":["file:///C:/Users/datoc/OneDrive/Documents/GitHub/lawManWeb/tmp/broccoli_type_script_compiler-input_base_path-2Or9DHZ9.tmp/0/src/app/user/user.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAgC,eAAe,CAAC,CAAA;AAEhD,6BAA8E,cAAc,CAAC,CAAA;AAK7F;IAWI,qBAAY,EAAe;QAX/B,iBA4EC;QAhEI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACV,wBAAwB;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,IAAI;YACxB,EAAE,CAAA,CAAC,IAAI,IAAE,IAAI,CAAC,CAAA,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACjC,CAAC;YACD,IAAI,CAAA,CAAC;gBACD,EAAE,CAAA,CAAC,KAAI,CAAC,GAAG,IAAE,IAAI,CAAC,CAAA,CAAC;oBACf,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1B,CAAC;gBACD,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,GAAG,IAAE,KAAI,CAAC,GAAG,CAAC,CAAA,CAAC;oBACxB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1B,CAAC;YAEL,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK,IAAE,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACxE,CAAC;IACD,8BAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;IACvB,CAAC;IACD,6BAAO,GAAP;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvD,mDAAmD;IACvD,CAAC;IACD,4BAAM,GAAN,UAAO,GAAG;QACN,EAAE,CAAA,CAAC,GAAG,IAAE,IAAI,CAAC,CAAA,CAAC;YACV,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;YACb,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,IAAE,IAAI,CAAC,CAAA,CAAC;gBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACxB,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,GAAG,EAAC,IAAI,CAAC,GAAG,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;YACrF,CAAC;QACL,CAAC;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE3D,CAAC;IACD,iCAAW,GAAX,UAAY,MAAM;QAEd,8EAA8E;QAC9E,gCAAgC;IACpC,CAAC;IACD,gCAAU,GAAV,UAAW,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK;QACpC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;QACjB,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;QACjB,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;QACjB,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,sEAAsE;IAC1E,CAAC;IACD,4BAAM,GAAN;QACI,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACtB,IAAI,CAAC,GAAG,GAAC,EAAE,CAAC;QACZ,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;QACd,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;QACd,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;QACd,QAAQ,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IACD,+BAAS,GAAT,UAAU,KAAK,EAAE,QAAQ;QACxB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IA5EL;QAAC,iBAAU,EAAE;;mBAAA;IA6Eb,kBAAC;AAAD,CAAC,AA5ED,IA4EC;AA5EY,mBAAW,cA4EvB,CAAA","sourcesContent":["import {Injectable,OnInit} from '@angular/core';\nimport {FirebaseAuth} from 'angularfire2';\nimport { AngularFire, FirebaseListObservable, FirebaseObjectObservable } from 'angularfire2';\nimport {Observable} from 'rxjs/Rx';\n\n\n@Injectable()\nexport class UserService implements OnInit{\n\taf: AngularFire;\n    uid: string;\n    user: FirebaseObjectObservable<any[]>;\n    users: FirebaseListObservable<any[]>;\n    userTasks: FirebaseListObservable<any[]>;\n    newUser;\n    email;\n    fName;\n    lName;\n    userEmail;\n    constructor(af: AngularFire) {\n    \tthis.af = af;\n        //this.getCurrentUser();\n        this.users = this.af.database.list('users');\n        this.af.auth.subscribe((auth) => {\n            if(auth==null){\n                console.log(\"not logged in\");\n            }\n            else{\n                if(this.uid==null){\n                    this.setUid(auth.uid);\n                }\n                else if(auth.uid!=this.uid){\n                    this.setUid(auth.uid);\n                }\n                //this.setUser();\n            }\n        });\n        this.af.database.list('users').subscribe(users=>console.log(users));\n    }\n    ngOnInit(){\n        this.newUser=false;\n    }\n    setUser(){\n        this.user = this.af.database.object('users/'+this.uid);\n        //this.user.subscribe((user)=>{console.log(user)});\n    }\n    setUid(uid){\n        if(uid!=null){\n            this.uid=uid;\n            if(this.newUser==true){\n                this.user = this.af.database.object('users/'+this.uid);\n                console.log('new User');\n                this.newUser=false;\n                this.user.set({uid:this.uid,email:this.email,fName:this.fName,lName:this.lName});\n            }\n        }\n        this.user = this.af.database.object('users/'+this.uid);\n\n    }\n    addUserTask(postId){\n\n        //this.userTasks = this.af.database.list('users/:'+ this.userKey+'/tasks');   \n        //this.userTasks.push({postId});\n    }\n    createUser(email, password, fName, lName){\n        this.af.auth.createUser({ email: email, password: password });\n        this.email=email;\n        this.fName=fName;\n        this.lName=lName;\n        this.newUser=true;\n        //this.users.push({uid:this.uid,email:email,fName:fName,lName:lName});\n    }\n    logout(){\n        this.af.auth.logout();\n        this.uid=\"\";\n        this.email=\"\";\n        this.fName=\"\";\n        this.lName=\"\";\n        location.reload();\n    }\n    loginUser(email, password){\n    \tthis.af.auth.login({ email: email, password: password });\n        console.log(\"login\");\n    }\n}"]}